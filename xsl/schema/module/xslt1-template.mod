<!-- ...................................................................... -->
<!-- XSL Transformations 1 Template Module ................................ -->
<!-- file: xslt1-template.mod
     
     XSLT, XSL Trensformations, Version 1.0
     
     Copyright 2010 Wakaba <w@suika.fam.cx>, All Rights Reserved.
     
     Permission to use, copy, modify and distribute this DTD and its
     accompanying documentation for any purpose and without fee is hereby
     granted in perpetuity, provided that the above copyright notice and
     this paragraph appear in all copies.  The copyright holders make no
     representation about the suitability of the DTD for any purpose.
     
     It is provided "as is" without expressed or implied warranty.
     
     Revision: 2010-06-20T04:26:01+00:00 (Generated by mkdtds/1.7)
     
     This DTD module is identified by the SYSTEM identifier:
     
       SYSTEM "xslt1-template.mod"
     
     ...................................................................... -->

<!-- Template

       apply-imports, apply-templates, attribute, attribute-set, call-template, choose, comment, copy, copy-of, element, fallback, for-each, if, message, number, otherwise, param, processing-instruction, sort, template, text, value-of, variable, when, with-param
-->

<!-- template: Defining a template rule ................ -->

<!ENTITY % xslt1.template.element "INCLUDE">
<![%xslt1.template.element;[
<!ENTITY % xslt1.template.content "(#PCDATA|%xslt1.param.qname;|%xslt1.instructions.class;%xslt1.result-elements.class;)*">
<!ENTITY % xslt1.template.qname "template">
<!ENTITY % xslt1.template.tagmin.start "-">
<!ENTITY % xslt1.template.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.template.tagmin "%xslt1.template.tagmin.start; %xslt1.template.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.template.tagmin "">
<!ELEMENT %xslt1.template.qname; %xslt1.template.tagmin; %xslt1.template.content;>
<!-- end of xslt1.template.element -->]]>

<!ENTITY % xslt1.template.attlist "INCLUDE">
<![%xslt1.template.attlist;[
<!ATTLIST %xslt1.template.qname;
	match	%xslt1.pattern.datatype;	#IMPLIED
	name	%xslt1.qname.datatype;	#IMPLIED
	priority	%xslt1.priority.datatype;	#IMPLIED
	%xslt1.mode.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.template.attlist -->]]>

<!-- apply-templates: Applying template rules .......... -->

<!ENTITY % xslt1.apply-templates.element "INCLUDE">
<![%xslt1.apply-templates.element;[
<!ENTITY % xslt1.apply-templates.content "(%xslt1.sort.qname;|%xslt1.with-param.qname;)*">
<!ENTITY % xslt1.apply-templates.qname "apply-templates">
<!ENTITY % xslt1.apply-templates.tagmin.start "-">
<!ENTITY % xslt1.apply-templates.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.apply-templates.tagmin "%xslt1.apply-templates.tagmin.start; %xslt1.apply-templates.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.apply-templates.tagmin "">
<!ELEMENT %xslt1.apply-templates.qname; %xslt1.apply-templates.tagmin; %xslt1.apply-templates.content;>
<!-- end of xslt1.apply-templates.element -->]]>

<!ENTITY % xslt1.apply-templates.attlist "INCLUDE">
<![%xslt1.apply-templates.attlist;[
<!ATTLIST %xslt1.apply-templates.qname;
	select	%xslt1.node-set-expr.datatype;	"node()"
	%xslt1.mode.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.apply-templates.attlist -->]]>

<!-- apply-imports: Overriding template rules .......... -->

<!ENTITY % xslt1.apply-imports.element "INCLUDE">
<![%xslt1.apply-imports.element;[
<!ENTITY % xslt1.apply-imports.content "EMPTY">
<!ENTITY % xslt1.apply-imports.qname "apply-imports">
<!ENTITY % xslt1.apply-imports.tagmin.start "-">
<!ENTITY % xslt1.apply-imports.tagmin.end "o">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.apply-imports.tagmin "%xslt1.apply-imports.tagmin.start; %xslt1.apply-imports.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.apply-imports.tagmin "">
<!ELEMENT %xslt1.apply-imports.qname; %xslt1.apply-imports.tagmin; %xslt1.apply-imports.content;>
<!-- end of xslt1.apply-imports.element -->]]>

<!ENTITY % xslt1.apply-imports.attlist "INCLUDE">
<![%xslt1.apply-imports.attlist;[
<!ATTLIST %xslt1.apply-imports.qname;
	%xslt1.common.attrib;>
<!-- end of xslt1.apply-imports.attlist -->]]>

<!-- call-template ..................................... -->

<!ENTITY % xslt1.call-template.element "INCLUDE">
<![%xslt1.call-template.element;[
<!ENTITY % xslt1.call-template.content "(%xslt1.with-param.qname;)*">
<!ENTITY % xslt1.call-template.qname "call-template">
<!ENTITY % xslt1.call-template.tagmin.start "-">
<!ENTITY % xslt1.call-template.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.call-template.tagmin "%xslt1.call-template.tagmin.start; %xslt1.call-template.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.call-template.tagmin "">
<!ELEMENT %xslt1.call-template.qname; %xslt1.call-template.tagmin; %xslt1.call-template.content;>
<!-- end of xslt1.call-template.element -->]]>

<!ENTITY % xslt1.call-template.attlist "INCLUDE">
<![%xslt1.call-template.attlist;[
<!ATTLIST %xslt1.call-template.qname;
	name	%xslt1.qname.datatype;	#REQUIRED
	%xslt1.common.attrib;>
<!-- end of xslt1.call-template.attlist -->]]>

<!-- element: Creating an element ...................... -->

<!ENTITY % xslt1.element.element "INCLUDE">
<![%xslt1.element.element;[
<!ENTITY % xslt1.element.content "%xslt1.EMPTY.qname;">
<!ENTITY % xslt1.element.qname "element">
<!ENTITY % xslt1.element.tagmin.start "-">
<!ENTITY % xslt1.element.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.element.tagmin "%xslt1.element.tagmin.start; %xslt1.element.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.element.tagmin "">
<!ELEMENT %xslt1.element.qname; %xslt1.element.tagmin; %xslt1.element.content;>
<!-- end of xslt1.element.element -->]]>

<!ENTITY % xslt1.element.attlist "INCLUDE">
<![%xslt1.element.attlist;[
<!ATTLIST %xslt1.element.qname;
	name	%xslt1.avt-qname.datatype;	#REQUIRED
	namespace	%xslt1.avt-uri-reference.datatype;	#IMPLIED
	%xslt1.use-attribute-sets.attrib;
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.element.attlist -->]]>

<!-- attribute: Creating an attribute .................. -->

<!ENTITY % xslt1.attribute.element "INCLUDE">
<![%xslt1.attribute.element;[
<!ENTITY % xslt1.attribute.content "%xslt1.char-template.content;">
<!ENTITY % xslt1.attribute.qname "attribute">
<!ENTITY % xslt1.attribute.tagmin.start "-">
<!ENTITY % xslt1.attribute.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.attribute.tagmin "%xslt1.attribute.tagmin.start; %xslt1.attribute.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.attribute.tagmin "">
<!ELEMENT %xslt1.attribute.qname; %xslt1.attribute.tagmin; %xslt1.attribute.content;>
<!-- end of xslt1.attribute.element -->]]>

<!ENTITY % xslt1.attribute.attlist "INCLUDE">
<![%xslt1.attribute.attlist;[
<!ATTLIST %xslt1.attribute.qname;
	name	%xslt1.avt-qname.datatype;	#REQUIRED
	namespace	%xslt1.avt-uri-reference.datatype;	#IMPLIED
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.attribute.attlist -->]]>

<!-- attribute-set: Named attribute set ................ -->

<!ENTITY % xslt1.attribute-set.element "INCLUDE">
<![%xslt1.attribute-set.element;[
<!ENTITY % xslt1.attribute-set.content "(%xslt1.attribute.qname;)*">
<!ENTITY % xslt1.attribute-set.qname "attribute-set">
<!ENTITY % xslt1.attribute-set.tagmin.start "-">
<!ENTITY % xslt1.attribute-set.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.attribute-set.tagmin "%xslt1.attribute-set.tagmin.start; %xslt1.attribute-set.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.attribute-set.tagmin "">
<!ELEMENT %xslt1.attribute-set.qname; %xslt1.attribute-set.tagmin; %xslt1.attribute-set.content;>
<!-- end of xslt1.attribute-set.element -->]]>

<!ENTITY % xslt1.attribute-set.attlist "INCLUDE">
<![%xslt1.attribute-set.attlist;[
<!ATTLIST %xslt1.attribute-set.qname;
	name	%xslt1.qname.datatype;	#REQUIRED
	%xslt1.common.attrib;>
<!-- end of xslt1.attribute-set.attlist -->]]>

<!-- text: Creating a text ............................. -->

<!ENTITY % xslt1.text.element "INCLUDE">
<![%xslt1.text.element;[
<!ENTITY % xslt1.text.content "(#PCDATA)*">
<!ENTITY % xslt1.text.qname "text">
<!ENTITY % xslt1.text.tagmin.start "-">
<!ENTITY % xslt1.text.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.text.tagmin "%xslt1.text.tagmin.start; %xslt1.text.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.text.tagmin "">
<!ELEMENT %xslt1.text.qname; %xslt1.text.tagmin; %xslt1.text.content;>
<!-- end of xslt1.text.element -->]]>

<!ENTITY % xslt1.text.attlist "INCLUDE">
<![%xslt1.text.attlist;[
<!ATTLIST %xslt1.text.qname;
	%xslt1.disable-output-escaping.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.text.attlist -->]]>

<!-- processing-instruction: Creating a processing instruction  -->

<!ENTITY % xslt1.processing-instruction.element "INCLUDE">
<![%xslt1.processing-instruction.element;[
<!ENTITY % xslt1.processing-instruction.content "%xslt1.char-template.content;">
<!ENTITY % xslt1.processing-instruction.qname "processing-instruction">
<!ENTITY % xslt1.processing-instruction.tagmin.start "-">
<!ENTITY % xslt1.processing-instruction.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.processing-instruction.tagmin "%xslt1.processing-instruction.tagmin.start; %xslt1.processing-instruction.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.processing-instruction.tagmin "">
<!ELEMENT %xslt1.processing-instruction.qname; %xslt1.processing-instruction.tagmin; %xslt1.processing-instruction.content;>
<!-- end of xslt1.processing-instruction.element -->]]>

<!ENTITY % xslt1.processing-instruction.attlist "INCLUDE">
<![%xslt1.processing-instruction.attlist;[
<!ATTLIST %xslt1.processing-instruction.qname;
	name	%xslt1.avt-ncname.datatype;	#REQUIRED
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.processing-instruction.attlist -->]]>

<!-- comment: Creating a comment ....................... -->

<!ENTITY % xslt1.comment.element "INCLUDE">
<![%xslt1.comment.element;[
<!ENTITY % xslt1.comment.content "%xslt1.char-template.content;">
<!ENTITY % xslt1.comment.qname "comment">
<!ENTITY % xslt1.comment.tagmin.start "-">
<!ENTITY % xslt1.comment.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.comment.tagmin "%xslt1.comment.tagmin.start; %xslt1.comment.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.comment.tagmin "">
<!ELEMENT %xslt1.comment.qname; %xslt1.comment.tagmin; %xslt1.comment.content;>
<!-- end of xslt1.comment.element -->]]>

<!ENTITY % xslt1.comment.attlist "INCLUDE">
<![%xslt1.comment.attlist;[
<!ATTLIST %xslt1.comment.qname;
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.comment.attlist -->]]>

<!-- copy: Copying ..................................... -->

<!ENTITY % xslt1.copy.element "INCLUDE">
<![%xslt1.copy.element;[
<!ENTITY % xslt1.copy.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.copy.qname "copy">
<!ENTITY % xslt1.copy.tagmin.start "-">
<!ENTITY % xslt1.copy.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.copy.tagmin "%xslt1.copy.tagmin.start; %xslt1.copy.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.copy.tagmin "">
<!ELEMENT %xslt1.copy.qname; %xslt1.copy.tagmin; %xslt1.copy.content;>
<!-- end of xslt1.copy.element -->]]>

<!ENTITY % xslt1.copy.attlist "INCLUDE">
<![%xslt1.copy.attlist;[
<!ATTLIST %xslt1.copy.qname;
	%xslt1.use-attribute-sets.attrib;
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.copy.attlist -->]]>

<!-- value-of: Generating text ......................... -->

<!ENTITY % xslt1.value-of.element "INCLUDE">
<![%xslt1.value-of.element;[
<!ENTITY % xslt1.value-of.content "EMPTY">
<!ENTITY % xslt1.value-of.qname "value-of">
<!ENTITY % xslt1.value-of.tagmin.start "-">
<!ENTITY % xslt1.value-of.tagmin.end "o">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.value-of.tagmin "%xslt1.value-of.tagmin.start; %xslt1.value-of.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.value-of.tagmin "">
<!ELEMENT %xslt1.value-of.qname; %xslt1.value-of.tagmin; %xslt1.value-of.content;>
<!-- end of xslt1.value-of.element -->]]>

<!ENTITY % xslt1.value-of.attlist "INCLUDE">
<![%xslt1.value-of.attlist;[
<!ATTLIST %xslt1.value-of.qname;
	select	%xslt1.string-expr.datatype;	#REQUIRED
	%xslt1.disable-output-escaping.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.value-of.attlist -->]]>

<!-- number: Numbering ................................. -->

<!ENTITY % xslt1.number.element "INCLUDE">
<![%xslt1.number.element;[
<!ENTITY % xslt1.number.content "EMPTY">
<!ENTITY % xslt1.number.qname "number">
<!ENTITY % xslt1.number.tagmin.start "-">
<!ENTITY % xslt1.number.tagmin.end "o">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.number.tagmin "%xslt1.number.tagmin.start; %xslt1.number.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.number.tagmin "">
<!ELEMENT %xslt1.number.qname; %xslt1.number.tagmin; %xslt1.number.content;>
<!-- end of xslt1.number.element -->]]>

<!ENTITY % xslt1.number.attlist "INCLUDE">
<![%xslt1.number.attlist;[
<!ATTLIST %xslt1.number.qname;
	level	(single | multiple | any)	"single"
	count	%xslt1.pattern.datatype;	#IMPLIED
	from	%xslt1.pattern.datatype;	#IMPLIED
	value	%xslt1.number-expr.datatype;	#IMPLIED
	format	%xslt1.avt-string.datatype;	"1"
	lang	%xslt1.avt-nmtoken.datatype;	#IMPLIED
	letter-value	%xslt1.avt-alphabetic-traditional.datatype;	#IMPLIED
	grouping-separator	%xslt1.avt-char.datatype;	#IMPLIED
	grouping-size	%xslt1.avt-number.datatype;	#IMPLIED
	%xslt1.common.attrib;>
<!-- end of xslt1.number.attlist -->]]>

<!-- for-each: Repetition .............................. -->

<!ENTITY % xslt1.for-each.element "INCLUDE">
<![%xslt1.for-each.element;[
<!ENTITY % xslt1.for-each.content "(#PCDATA|%xslt1.sort.qname;|%xslt1.instructions.class;%xslt1.result-elements.class;)*">
<!ENTITY % xslt1.for-each.qname "for-each">
<!ENTITY % xslt1.for-each.tagmin.start "-">
<!ENTITY % xslt1.for-each.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.for-each.tagmin "%xslt1.for-each.tagmin.start; %xslt1.for-each.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.for-each.tagmin "">
<!ELEMENT %xslt1.for-each.qname; %xslt1.for-each.tagmin; %xslt1.for-each.content;>
<!-- end of xslt1.for-each.element -->]]>

<!ENTITY % xslt1.for-each.attlist "INCLUDE">
<![%xslt1.for-each.attlist;[
<!ATTLIST %xslt1.for-each.qname;
	select	%xslt1.node-set-expr.datatype;	#REQUIRED
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.for-each.attlist -->]]>

<!-- if: Conditional processing ........................ -->

<!ENTITY % xslt1.if.element "INCLUDE">
<![%xslt1.if.element;[
<!ENTITY % xslt1.if.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.if.qname "if">
<!ENTITY % xslt1.if.tagmin.start "-">
<!ENTITY % xslt1.if.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.if.tagmin "%xslt1.if.tagmin.start; %xslt1.if.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.if.tagmin "">
<!ELEMENT %xslt1.if.qname; %xslt1.if.tagmin; %xslt1.if.content;>
<!-- end of xslt1.if.element -->]]>

<!ENTITY % xslt1.if.attlist "INCLUDE">
<![%xslt1.if.attlist;[
<!ATTLIST %xslt1.if.qname;
	test	%xslt1.boolean-expr.datatype;	#REQUIRED
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.if.attlist -->]]>

<!-- choose: Conditional processing .................... -->

<!ENTITY % xslt1.choose.element "INCLUDE">
<![%xslt1.choose.element;[
<!ENTITY % xslt1.choose.content "(%xslt1.when.qname;+,%xslt1.otherwise.qname;?)">
<!ENTITY % xslt1.choose.qname "choose">
<!ENTITY % xslt1.choose.tagmin.start "-">
<!ENTITY % xslt1.choose.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.choose.tagmin "%xslt1.choose.tagmin.start; %xslt1.choose.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.choose.tagmin "">
<!ELEMENT %xslt1.choose.qname; %xslt1.choose.tagmin; %xslt1.choose.content;>
<!-- end of xslt1.choose.element -->]]>

<!ENTITY % xslt1.choose.attlist "INCLUDE">
<![%xslt1.choose.attlist;[
<!ATTLIST %xslt1.choose.qname;
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.choose.attlist -->]]>

<!-- when .............................................. -->

<!ENTITY % xslt1.when.element "INCLUDE">
<![%xslt1.when.element;[
<!ENTITY % xslt1.when.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.when.qname "when">
<!ENTITY % xslt1.when.tagmin.start "-">
<!ENTITY % xslt1.when.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.when.tagmin "%xslt1.when.tagmin.start; %xslt1.when.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.when.tagmin "">
<!ELEMENT %xslt1.when.qname; %xslt1.when.tagmin; %xslt1.when.content;>
<!-- end of xslt1.when.element -->]]>

<!ENTITY % xslt1.when.attlist "INCLUDE">
<![%xslt1.when.attlist;[
<!ATTLIST %xslt1.when.qname;
	test	%xslt1.boolean-expr.datatype;	#REQUIRED
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.when.attlist -->]]>

<!-- otherwise ......................................... -->

<!ENTITY % xslt1.otherwise.element "INCLUDE">
<![%xslt1.otherwise.element;[
<!ENTITY % xslt1.otherwise.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.otherwise.qname "otherwise">
<!ENTITY % xslt1.otherwise.tagmin.start "-">
<!ENTITY % xslt1.otherwise.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.otherwise.tagmin "%xslt1.otherwise.tagmin.start; %xslt1.otherwise.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.otherwise.tagmin "">
<!ELEMENT %xslt1.otherwise.qname; %xslt1.otherwise.tagmin; %xslt1.otherwise.content;>
<!-- end of xslt1.otherwise.element -->]]>

<!ENTITY % xslt1.otherwise.attlist "INCLUDE">
<![%xslt1.otherwise.attlist;[
<!ATTLIST %xslt1.otherwise.qname;
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.otherwise.attlist -->]]>

<!-- sort: Sorting ..................................... -->

<!ENTITY % xslt1.sort.element "INCLUDE">
<![%xslt1.sort.element;[
<!ENTITY % xslt1.sort.content "EMPTY">
<!ENTITY % xslt1.sort.qname "sort">
<!ENTITY % xslt1.sort.tagmin.start "-">
<!ENTITY % xslt1.sort.tagmin.end "o">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.sort.tagmin "%xslt1.sort.tagmin.start; %xslt1.sort.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.sort.tagmin "">
<!ELEMENT %xslt1.sort.qname; %xslt1.sort.tagmin; %xslt1.sort.content;>
<!-- end of xslt1.sort.element -->]]>

<!ENTITY % xslt1.sort.attlist "INCLUDE">
<![%xslt1.sort.attlist;[
<!ATTLIST %xslt1.sort.qname;
	select	%xslt1.string-expr.datatype;	"."
	lang	%xslt1.avt-nmtoken.datatype;	#IMPLIED
	data-type	%xslt1.avt-text-number-qname-but-not-ncname.datatype;	"text"
	order	%xslt1.avt-ascending-descending.datatype;	"ascending"
	case-order	%xslt1.avt-upper-first-lower-first.datatype;	#IMPLIED
	%xslt1.common.attrib;>
<!-- end of xslt1.sort.attlist -->]]>

<!-- variable: Variable ................................ -->

<!ENTITY % xslt1.variable.element "INCLUDE">
<![%xslt1.variable.element;[
<!ENTITY % xslt1.variable.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.variable.qname "variable">
<!ENTITY % xslt1.variable.tagmin.start "-">
<!ENTITY % xslt1.variable.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.variable.tagmin "%xslt1.variable.tagmin.start; %xslt1.variable.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.variable.tagmin "">
<!ELEMENT %xslt1.variable.qname; %xslt1.variable.tagmin; %xslt1.variable.content;>
<!-- end of xslt1.variable.element -->]]>

<!ENTITY % xslt1.variable.attlist "INCLUDE">
<![%xslt1.variable.attlist;[
<!ATTLIST %xslt1.variable.qname;
	name	%xslt1.qname.datatype;	#REQUIRED
	select	%xslt1.expr.datatype;	#IMPLIED
	%xslt1.common.attrib;>
<!-- end of xslt1.variable.attlist -->]]>

<!-- param: Variable ................................... -->

<!ENTITY % xslt1.param.element "INCLUDE">
<![%xslt1.param.element;[
<!ENTITY % xslt1.param.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.param.qname "param">
<!ENTITY % xslt1.param.tagmin.start "-">
<!ENTITY % xslt1.param.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.param.tagmin "%xslt1.param.tagmin.start; %xslt1.param.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.param.tagmin "">
<!ELEMENT %xslt1.param.qname; %xslt1.param.tagmin; %xslt1.param.content;>
<!-- end of xslt1.param.element -->]]>

<!ENTITY % xslt1.param.attlist "INCLUDE">
<![%xslt1.param.attlist;[
<!ATTLIST %xslt1.param.qname;
	name	%xslt1.qname.datatype;	#REQUIRED
	select	%xslt1.expr.datatype;	#IMPLIED
	%xslt1.common.attrib;>
<!-- end of xslt1.param.attlist -->]]>

<!-- copy-of: Using values of variables and parameters . -->

<!ENTITY % xslt1.copy-of.element "INCLUDE">
<![%xslt1.copy-of.element;[
<!ENTITY % xslt1.copy-of.content "EMPTY">
<!ENTITY % xslt1.copy-of.qname "copy-of">
<!ENTITY % xslt1.copy-of.tagmin.start "-">
<!ENTITY % xslt1.copy-of.tagmin.end "o">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.copy-of.tagmin "%xslt1.copy-of.tagmin.start; %xslt1.copy-of.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.copy-of.tagmin "">
<!ELEMENT %xslt1.copy-of.qname; %xslt1.copy-of.tagmin; %xslt1.copy-of.content;>
<!-- end of xslt1.copy-of.element -->]]>

<!ENTITY % xslt1.copy-of.attlist "INCLUDE">
<![%xslt1.copy-of.attlist;[
<!ATTLIST %xslt1.copy-of.qname;
	select	%xslt1.expr.datatype;	#REQUIRED
	%xslt1.common.attrib;>
<!-- end of xslt1.copy-of.attlist -->]]>

<!-- with-param: Passing parameter to template ......... -->

<!ENTITY % xslt1.with-param.element "INCLUDE">
<![%xslt1.with-param.element;[
<!ENTITY % xslt1.with-param.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.with-param.qname "with-param">
<!ENTITY % xslt1.with-param.tagmin.start "-">
<!ENTITY % xslt1.with-param.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.with-param.tagmin "%xslt1.with-param.tagmin.start; %xslt1.with-param.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.with-param.tagmin "">
<!ELEMENT %xslt1.with-param.qname; %xslt1.with-param.tagmin; %xslt1.with-param.content;>
<!-- end of xslt1.with-param.element -->]]>

<!ENTITY % xslt1.with-param.attlist "INCLUDE">
<![%xslt1.with-param.attlist;[
<!ATTLIST %xslt1.with-param.qname;
	name	%xslt1.qname.datatype;	#REQUIRED
	select	%xslt1.expr.datatype;	#IMPLIED
	%xslt1.common.attrib;>
<!-- end of xslt1.with-param.attlist -->]]>

<!-- message: Send a message ........................... -->

<!ENTITY % xslt1.message.element "INCLUDE">
<![%xslt1.message.element;[
<!ENTITY % xslt1.message.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.message.qname "message">
<!ENTITY % xslt1.message.tagmin.start "-">
<!ENTITY % xslt1.message.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.message.tagmin "%xslt1.message.tagmin.start; %xslt1.message.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.message.tagmin "">
<!ELEMENT %xslt1.message.qname; %xslt1.message.tagmin; %xslt1.message.content;>
<!-- end of xslt1.message.element -->]]>

<!ENTITY % xslt1.message.attlist "INCLUDE">
<![%xslt1.message.attlist;[
<!ATTLIST %xslt1.message.qname;
	terminate	%xslt1.yesno.datatype;	"no"
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.message.attlist -->]]>

<!-- fallback: Fallback for an instruction element ..... -->

<!ENTITY % xslt1.fallback.element "INCLUDE">
<![%xslt1.fallback.element;[
<!ENTITY % xslt1.fallback.content "%xslt1.xslt-template.content;">
<!ENTITY % xslt1.fallback.qname "fallback">
<!ENTITY % xslt1.fallback.tagmin.start "-">
<!ENTITY % xslt1.fallback.tagmin.end "-">
<![%sgml.tag.minimizable;[
<!ENTITY % xslt1.fallback.tagmin "%xslt1.fallback.tagmin.start; %xslt1.fallback.tagmin.end;">
<!-- end of sgml.tag.minimizable -->]]>
<!ENTITY % xslt1.fallback.tagmin "">
<!ELEMENT %xslt1.fallback.qname; %xslt1.fallback.tagmin; %xslt1.fallback.content;>
<!-- end of xslt1.fallback.element -->]]>

<!ENTITY % xslt1.fallback.attlist "INCLUDE">
<![%xslt1.fallback.attlist;[
<!ATTLIST %xslt1.fallback.qname;
	%xslt1.space.attrib;
	%xslt1.common.attrib;>
<!-- end of xslt1.fallback.attlist -->]]>


<!-- end of xslt1-template.mod -->
